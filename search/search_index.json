{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"<p>Welcome to the OptiGUI documentation. OptiGUI enables the customization of any inventory GUIs on Fabric&amp;Quilt, and has built-in support for OptiFine resource packs.</p>"},{"location":"index.html#optifine-resource-packs","title":"OptiFine resource packs","text":"<p>OptiGUI supports OptiFine resource packs. When loading OptiFine resources, OptiGUI internally converts them to the equivalent OptiGUI resource, then proceeds to load them.</p> <p>If you want to reach a broader user base with your resource pack, and OptiFine provides all the necessary features, then create an OptiFine resource pack. However, if some features are not possible with OptiFine, scroll down for alternatives.</p>"},{"location":"index.html#optigui-resource-packs","title":"OptiGUI resource packs","text":"<p>OptiFine's custom GUI support is lagging behind by quite a few years, as seen in some issues. OptiGUI resource packs, in contrast, support more features.</p> <p>I also found it confusing using <code>container=chest</code>, as there is no way to specify whether to replace the texture of a single chest, and adding <code>_barrel</code> to it was a mistake, because OptiFine ignores <code>_barrel</code> as mentioned in #30.</p> <p>I introduced OptiGUI-specific configuration files in OptiGUI 2.1.0-beta.1, which enables the use of more precise selectors to choose when to replace the texture. These can be found here. More selectors are planned to be added in later versions, you can check out GitHub issues to see some of them.</p>"},{"location":"index.html#hybrid-resource-packs","title":"Hybrid resource packs","text":"<p>OptiGUI and OptiFine resources reside in different folders, and have different file extensions, so it is possible to create \"hybrid resource packs\".</p> <p>If you want to use OptiGUI features, and also want to support OptiFine, then I recommend creating OptiFine-specific assets whenever possible, and if it's not possible, use OptiGUI features. These latter resources will only be available for OptiGUI users, while OptiFine users can enjoy a subset of your resource pack.</p>"},{"location":"index.html#referencing-optifine-textures-from-optigui-ini-files","title":"Referencing OptiFine textures from OptiGUI INI files","text":"<p>OptiFine assets are located in the <code>/assets/minecraft/optifine/gui/container/</code> folder (or its children).</p> <p>Example</p> <p>If you have a texture at <code>/assets/minecraft/optifine/gui/container/shulker_boxes/purple.png</code>, you can reference it from any OptiGUI INI file using:</p> <pre><code>replacement = minecraft:optifine/gui/container/shulker_boxes/purple.png\n</code></pre>"},{"location":"index.html#referencing-optigui-assets-from-optifine-properties","title":"Referencing OptiGUI assets from OptiFine properties","text":"<p>OptiGUI assets are located in the <code>/assets/optigui/gui/</code> folder (or its children).</p> <p>Example</p> <p>If you have a texture at <code>/assets/optigui/gui/shulker_boxes/purple.png</code>, you can reference it from any OptiFine properties file using:</p> <pre><code>texture=optigui:gui/shulker_boxes/purple.png\n</code></pre>"},{"location":"index.html#replacing-inventory-menu-textures-typically-found-on-servers","title":"Replacing inventory menu textures (typically found on servers)","text":"<p>WIP. Some tips can be found in #50.</p>"},{"location":"index.html#animations","title":"Animations","text":"<p>Animations may be possible in the future with selectors, like <code>frame.numerator</code> and <code>frame.denominator</code> (non-existent at the moment), which is different from OptiFine custom animations.</p> <p>OptiGUI supports Animatica (Modrinth, CurseForge) out of box.</p>"},{"location":"conditional.html","title":"Conditional loading","text":"<p>OptiGUI 2.1.0-beta.3+ supports conditionally loading OptiGUI resources.</p> <p>Conditional loading selectors always begin with <code>if.</code> (except for <code>if</code>), and should be added to groups to specify when (not) to load the group (just like normal selectors). These will be evaluated once as filters when loading resources instead of when replacing textures, and will not \"leak\" into the filters created by other selectors.</p>"},{"location":"conditional.html#if","title":"<code>if</code>","text":"<p>Optional OptiGUI 2.1.0-beta.3+</p> <p>A single boolean specifying if the property should be loaded. Set to <code>false</code> to prevent the group from loading.</p> <p>Example</p> <pre><code>[container]\nif = false\n</code></pre>"},{"location":"conditional.html#ifmodoptiguiversionat_least","title":"<code>if.mod.optigui.version.at_least</code>","text":"<p>Optional OptiGUI 2.1.0-beta.3+ Removed in OptiGUI 2.3.0-alpha.1</p> <p>Use <code>if.mods = optigui&gt;=version</code> instead of <code>if.mod.optigui.version.at_least = version</code>.</p>"},{"location":"conditional.html#ifmods","title":"<code>if.mods</code>","text":"<p>Optional OptiGUI 2.2.0-alpha.1+</p> <p>A list of the following things:</p> <p>The mod ID, and optionally an operator and a semantic version specifying the version of a mod required to load the group. If an operator and a version is omitted, OptiGUI will check for the presence of the mod. Useful to prevent loading on old versions, which don't support some features.</p> <p>If multiple mods are specified, all must match to load the resource. If a mod is not present, it will not match regardless of the version specified.</p> <p>Note</p> <p>There is no operator currently to match only when the mod is not present</p> <p>Example</p> <pre><code>if.mods = optigui                               # Checks for the presence of optigui\nif.mods = optigui&gt;=2.3.0-alpha.1                # Checks, if OptiGUI is 2.3.0-alpha.1 or newer\nif.mods = minecraft~1.20.1                      # Checks if Minecraft is &gt;=1.20.1 and &lt;1.21\nif.mods = optigui&gt;=2.3.0-alpha.1 optigui&lt;2.4.0  # Checks if OptiGUI meets multiple criteria\nif.mods = minecraft fabric-api java&gt;=17         # Mix-n-match (all of them has to match)\n</code></pre>"},{"location":"conditional.html#operators","title":"Operators","text":"Opertor Checks, if a mod... <code>&gt;</code> is newer, than the given version <code>&gt;=</code> is at least as new, as the given version <code>&lt;</code> is older, than the given version <code>&lt;=</code> is at most as old, as the given version <code>=</code> has the same version, as the given version <code>~</code> is at least as new, and has the same minor (X.Y.z) version, as the given version <code>^</code> is at least as new, and has the same major (X.y.z) version, as the given version"},{"location":"develop.html","title":"Developing OptiGUI","text":""},{"location":"develop.html#build-optigui","title":"Build OptiGUI","text":"<p>To build OptiGUI, run <code>./gradlew build</code> or run the task from your IDE.</p>"},{"location":"develop.html#generate-documentation","title":"Generate documentation","text":"<p>To generate documentation, run <code>./gradlew dokkaHtmlMultiModule</code>.</p> <p>To generate documentation with Java syntax, run <code>./gradlew dokkaHtmlMultiModule -PjavaSyntax</code>.</p>"},{"location":"format.html","title":"Replacing GUI textures","text":"<p>This page describes the usage of OptiGUI 2.1.0-beta.1+ INI files. The OptiFine custom GUI documentation is available here.</p> <p>This page assumes you to be familiar with the OptiGUI syntax.</p> <p>Warning</p> <p>OptiGUI 2.1.0-beta.1 removed all OptiFine extensions from OptiFine files: <code>_cartography_table</code>, <code>_chest_boat</code>, <code>_grindstone</code>, <code>_loom</code>, <code>_smithing_table</code>, <code>_stonecutter</code>, <code>_barrel</code>, <code>_minecart</code>, <code>_furnace</code>, <code>_blast</code>, <code>_blast_furnace</code>, <code>_smoker</code>, <code>_camel</code>, <code>_zombie_horse</code>, <code>_skeleton_horse</code>, <code>_wandering_trader</code>.</p> <p>See the migration guide to learn how to convert your resource pack.</p> <p>You can define a texture replacement for each inventory GUI, and apply them based on different criteria.</p> <p>For each container GUI texture to replace, create a <code>.ini</code> file in <code>/assets/optigui/gui/</code> folder (or any of its subfolders in any depth) of the resource pack.</p> <p>Note</p> <p>When specifying texture paths, do not forget file extensions, otherwise OptiGUI will not find the resources!</p>"},{"location":"format.html#special-selectors","title":"Special selectors","text":"<p>These are not real selectors used for selecting entities and block entities, just have the same syntax. OptiGUI processes these specially when loading the resource.</p>"},{"location":"format.html#replacement","title":"<code>replacement</code>","text":"<p>Required OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Path to the replacement texture for the default GUI texture of the container. This is not really a selector, as it is not used to match against an interaction, but specifies the replacement if all other selectors match.</p>"},{"location":"format.html#loadpriority","title":"<code>load.priority</code>","text":"<p>Optional OptiGUI 2.2.0-alpha.1+ Minecraft 1.18+</p> <p>A single integer (not range) specifying the load priority of the group. Default load priority is <code>0</code>. Higher load priority means earlier processing while evaluating the loaded filters.</p>"},{"location":"format.html#interaction-selectors","title":"Interaction selectors","text":""},{"location":"format.html#interactiontexture","title":"<code>interaction.texture</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Path to the texture to replace (the default texture of the container). When left empty, OptiGUI looks up the default texture of the specified containers.</p>"},{"location":"format.html#interactionhand","title":"<code>interaction.hand</code>","text":"<p>Optional OptiGUI 2.2.0-alpha.1+ Minecraft 1.18+</p> <p>The hand the player started the interaction with. Possible values:</p> <ul> <li><code>main_hand</code></li> <li><code>off_hand</code></li> </ul>"},{"location":"format.html#interactionscreen_title","title":"<code>interaction.screen_title</code>","text":"<p>Upcoming</p>"},{"location":"format.html#common-selectors","title":"Common selectors","text":""},{"location":"format.html#name","title":"<code>name</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A String specifying the exact value of the name of the entity or block entity.</p>"},{"location":"format.html#namewildcard","title":"<code>name.wildcard</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A String specifying the case-sensitive wildcard to match against the name of the entity or block entity.</p>"},{"location":"format.html#namewildcardignore_case","title":"<code>name.wildcard.ignore_case</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A String specifying the case-insensitive wildcard to match against the name of the entity or block entity.</p>"},{"location":"format.html#nameregex","title":"<code>name.regex</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A String specifying the case-sensitive regex to match against the name of the entity or block entity.</p>"},{"location":"format.html#nameregexignore_case","title":"<code>name.regex.ignore_case</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A String specifying the case-insensitive regex to match against the name of the entity or block entity.</p>"},{"location":"format.html#biomes","title":"<code>biomes</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A list of biome identifiers specifying the biomes of the entity or block entity where this replacement applies.</p>"},{"location":"format.html#heights","title":"<code>heights</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A list of integers and ranges specifying the heights (Y coordiantes) of the entity or block entity, where this replacement applies.</p>"},{"location":"format.html#independent-selectors","title":"Independent selectors","text":""},{"location":"format.html#date","title":"<code>date</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A list of dates specifying when the texture should be replaced.</p>"},{"location":"format.html#player-selectors","title":"Player selectors","text":""},{"location":"format.html#playername","title":"<code>player.name</code>","text":"<p>Optional OptiGUI 2.3.0-beta.3+ Minecraft 1.18+</p> <p>A String specifying the exact value of the name of the entity or block entity.</p>"},{"location":"format.html#playernamewildcard","title":"<code>player.name.wildcard</code>","text":"<p>Optional OptiGUI 2.3.0-beta.3+ Minecraft 1.18+</p> <p>A String specifying the case-sensitive wildcard to match against the name of the entity or block entity.</p>"},{"location":"format.html#playernamewildcardignore_case","title":"<code>player.name.wildcard.ignore_case</code>","text":"<p>Optional OptiGUI 2.3.0-beta.3+ Minecraft 1.18+</p> <p>A String specifying the case-insensitive wildcard to match against the name of the entity or block entity.</p>"},{"location":"format.html#playernameregex","title":"<code>player.name.regex</code>","text":"<p>Optional OptiGUI 2.3.0-beta.3+ Minecraft 1.18+</p> <p>A String specifying the case-sensitive regex to match against the name of the entity or block entity.</p>"},{"location":"format.html#playernameregexignore_case","title":"<code>player.name.regex.ignore_case</code>","text":"<p>Optional OptiGUI 2.3.0-beta.3+ Minecraft 1.18+</p> <p>A String specifying the case-insensitive regex to match against the name of the entity or block entity.</p>"},{"location":"format.html#playerbiomes","title":"<code>player.biomes</code>","text":"<p>Optional OptiGUI 2.3.0-beta.3+ Minecraft 1.18+</p> <p>A list of biome identifiers specifying the biomes of the entity or block entity where this replacement applies.</p>"},{"location":"format.html#playerheights","title":"<code>player.heights</code>","text":"<p>Optional OptiGUI 2.3.0-beta.3+ Minecraft 1.18+</p> <p>A list of integers and ranges specifying the heights (Y coordiantes) of the entity or block entity, where this replacemen</p>"},{"location":"format.html#comparator-selectors","title":"Comparator selectors","text":""},{"location":"format.html#comparatoroutput","title":"<code>comparator.output</code>","text":"<p>Optional OptiGUI 2.1.3+ Minecraft 1.18+</p> <p>A list of integers and ranges specifying the redstone comparator output of the entity or block entity, where this replacement applies.</p>"},{"location":"format.html#anvil","title":"Anvil","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/anvil.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[anvil chipped_anvil damaged_anvil]\n</code></pre>"},{"location":"format.html#barrel","title":"Barrel","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/generic_54.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[barrel]\n</code></pre>"},{"location":"format.html#beacon","title":"Beacon","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/beacon.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[beacon]\nbeacon.levels = 1 3-5\n</code></pre>"},{"location":"format.html#beaconlevels","title":"<code>beacon.levels</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A list of integers and ranges specifying the levels of beacon power to apply to (how many bases of blocks).</p>"},{"location":"format.html#book","title":"Book","text":"<p>OptiGUI 2.1.3+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/book.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[written_book]\nbook.page.current = 1 3-4\nbook.page.count = 5 10-15\n</code></pre>"},{"location":"format.html#bookpagecurrent","title":"<code>book.page.current</code>","text":"<p>Optional OptiGUI 2.1.3+ Minecraft 1.18+</p> <p>A list of integers and ranges specifying the the current page of the book, where this replacement applies.</p>"},{"location":"format.html#bookpagecount","title":"<code>book.page.count</code>","text":"<p>Optional OptiGUI 2.1.3+ Minecraft 1.18+</p> <p>A list of integers and ranges specifying the the page count of the book, where this replacement applies.</p>"},{"location":"format.html#book-and-quill","title":"Book and Quill","text":"<p>OptiGUI 2.1.3+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/book.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, book selectors</p> <p>Example</p> <pre><code>[writable_book]\n</code></pre>"},{"location":"format.html#brewing-stand","title":"Brewing stand","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/brewing_stand.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[brewing_stand]\n</code></pre>"},{"location":"format.html#cartography-table","title":"Cartography table","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/cartography_table.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[cartography_tabe]\n</code></pre>"},{"location":"format.html#chest","title":"Chest","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/generic_54.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[chest]\nchest.large = true\n</code></pre>"},{"location":"format.html#chestlarge","title":"<code>chest.large</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A single boolean specifying if the texture of a double chest should be replaced.</p>"},{"location":"format.html#trapped-chest","title":"Trapped chest","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/generic_54.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors, chest selectors</p> <p>Example</p> <pre><code>[trapped_chest]\nchest.large = true\n</code></pre>"},{"location":"format.html#ender-chest","title":"Ender chest","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/generic_54.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[ender_chest]\n</code></pre>"},{"location":"format.html#chest-boats","title":"Chest boats","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.19+</p> <p>Texture path: <code>minecraft:textures/gui/container/generic_54.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[chest_boat]\nchest_boat.variants = oak spruce\n</code></pre>"},{"location":"format.html#chest_boatvariants","title":"<code>chest_boat.variants</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.19-1.21.1 Removed in Minecraft 1.21.2</p> <p>Warning</p> <p>Entity <code>minecraft:chest_boat</code> was split in snapshot 24w39a. Use the new entity IDs instead of this selector. Use conditional loading to support multiple versions of the game.</p> <p>A list of strings specifying the wood type of the chest boat. Possible values:</p> <ul> <li><code>acacia</code></li> <li><code>bamboo</code> Minecraft 1.20+ Minecraft 1.19.3+ with 1.20 experiments</li> <li><code>birch</code></li> <li><code>cherry</code> Minecraft 1.20+ Minecraft 1.19.4+ with 1.20 experiments</li> <li><code>dark_oak</code></li> <li><code>jungle</code></li> <li><code>mangrove</code></li> <li><code>oak</code></li> <li><code>spruce</code></li> </ul>"},{"location":"format.html#chest-minecart","title":"Chest minecart","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>mniecraft:textures/gui/container/generic_54.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[chest_minecart]\n</code></pre>"},{"location":"format.html#crafting-table","title":"Crafting table","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/crafting_table.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[crafting_table]\n</code></pre>"},{"location":"format.html#dispenser","title":"Dispenser","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/dispenser.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[dispenser]\n</code></pre>"},{"location":"format.html#dropper","title":"Dropper","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/dispenser.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[dropper]\n</code></pre>"},{"location":"format.html#enchanting-table","title":"Enchanting table","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/enchanting_table.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[enchanting_table]\n</code></pre>"},{"location":"format.html#furnace","title":"Furnace","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/furnace.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[furnace]\n</code></pre>"},{"location":"format.html#blast-furnace","title":"Blast furnace","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/blast_furnace.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[blast_furnace]\n</code></pre>"},{"location":"format.html#smoker","title":"Smoker","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/smoker.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[smoker]\n</code></pre>"},{"location":"format.html#grindstone","title":"Grindstone","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/grindstone.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[grindstone]\n</code></pre>"},{"location":"format.html#hopper","title":"Hopper","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/hopper.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[hopper]\n</code></pre>"},{"location":"format.html#hopper-minecart","title":"Hopper minecart","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/hopper.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[hopper_minecart]\n</code></pre>"},{"location":"format.html#horse","title":"Horse","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, donkey selectors</p> <p>Example</p> <pre><code>[horse]\n</code></pre>"},{"location":"format.html#horsehas_saddle","title":"<code>horse.has_saddle</code>","text":"<p>Optional OptiGUI 2.2.0-alpha.1 Minecraft 1.18+</p> <p>A single boolean specifying if the entity needs to be or not be saddled.</p>"},{"location":"format.html#horsevariants","title":"<code>horse.variants</code>","text":"<p>Optional OptiGUI 2.2.0-alpha.1+ Minecraft 1.18+</p> <p>A list of strings specifying the horse's variant. Possible values:</p> <ul> <li><code>black</code></li> <li><code>brown</code></li> <li><code>chestnut</code></li> <li><code>creamy</code></li> <li><code>dark_brown</code></li> <li><code>gray</code></li> <li><code>white</code></li> </ul>"},{"location":"format.html#horsemarkings","title":"<code>horse.markings</code>","text":"<p>Optional OptiGUI 2.2.0-alpha.1+ Minecraft 1.18+</p> <p>A list of strings specifying the marking on a horse. Possible values:</p> <ul> <li><code>black_dots</code></li> <li><code>none</code></li> <li><code>white</code></li> <li><code>white_dots</code></li> <li><code>white_field</code></li> </ul>"},{"location":"format.html#donkey","title":"Donkey","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, <code>horse.has_saddle</code></p> <p>Example</p> <pre><code>[donkey]\n</code></pre>"},{"location":"format.html#donkeyhas_chest","title":"<code>donkey.has_chest</code>","text":"<p>Optional OptiGUI 2.1.3+ Minecraft 1.18+</p> <p>A single boolean specifying if the entity needs to have or not have a chest.</p>"},{"location":"format.html#mule","title":"Mule","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, donkey selectors</p> <p>Example</p> <pre><code>[mule]\n</code></pre>"},{"location":"format.html#llama","title":"Llama","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, donkey selectors</p> <p>Example</p> <pre><code>[llama trader_llama]\nllama.colors = red green blue\n</code></pre>"},{"location":"format.html#llamacolors","title":"<code>llama.colors</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A list of strings specifying the llama's carpet color. Possible values:</p> <ul> <li><code>white</code></li> <li><code>orange</code></li> <li><code>magenta</code></li> <li><code>light_blue</code></li> <li><code>yellow</code></li> <li><code>lime</code></li> <li><code>pink</code></li> <li><code>gray</code></li> <li><code>light_gray</code></li> <li><code>cyan</code></li> <li><code>purple</code></li> <li><code>blue</code></li> <li><code>brown</code></li> <li><code>green</code></li> <li><code>red</code></li> <li><code>black</code></li> </ul>"},{"location":"format.html#llamavariants","title":"<code>llama.variants</code>","text":"<p>Optional OptiGUI 2.2.0-alpha.1+ Minecraft 1.18+</p> <p>A list of strings specifying the llama's variant. Possible values:</p> <ul> <li><code>brown</code></li> <li><code>creamy</code></li> <li><code>gray</code></li> <li><code>white</code></li> </ul>"},{"location":"format.html#trader-llama","title":"Trader llama","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, donkey selectors, llama selectors</p> <p>Example</p> <pre><code>[llama trader_llama]\nllama.colors = red green blue\n</code></pre>"},{"location":"format.html#skeleton-horse","title":"Skeleton horse","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[skeleton_horse]\n</code></pre>"},{"location":"format.html#zombie-horse","title":"Zombie horse","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[zombie_horse]\n</code></pre>"},{"location":"format.html#camel","title":"Camel","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.20+ Minecraft 1.19.3+ with 1.20 experiments</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, <code>horse.has_saddle</code></p> <p>Example</p> <pre><code>[camel]\n</code></pre>"},{"location":"format.html#lectern","title":"Lectern","text":"<p>OptiGUI 2.1.0+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/horse.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors, book selectors</p> <p>Example</p> <pre><code>[lectern]\n</code></pre>"},{"location":"format.html#loom","title":"Loom","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/loom.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[loom]\n</code></pre>"},{"location":"format.html#shulker-boxes","title":"Shulker boxes","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/shulker_box.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors, comparator selectors</p> <p>Example</p> <pre><code>[shulker_box]\n[white_shulker_box]\n[orange_shulker_box]\n[magenta_shulker_box]\n[light_blue_shulker_box]\n[yellow_shulker_box]\n[lime_shulker_box]\n[pink_shulker_box]\n[gray_shulker_box]\n[light_gray_shulker_box]\n[cyan_shulker_box]\n[purple_shulker_box]\n[blue_shulker_box]\n[brown_shulker_box]\n[green_shulker_box]\n[red_shulker_box]\n[black_shulker_box]\n</code></pre>"},{"location":"format.html#sign","title":"Sign","text":"<p>Not supported</p> <p>Sign edit GUI renders a block model of the sign block, it doesn't have a texture.</p>"},{"location":"format.html#hanging-sign","title":"Hanging sign","text":"<p>OptiGUI 2.1.3+ Minecraft 1.20+ Minecraft 1.19.3+ with 1.20 experiments</p> <p>Texture path: <code>minecraft:textures/gui/hanging_signs/*.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[acacia_hanging_sign acacia_wall_hanging_sign]\n[bamboo_hanging_sign bamboo_wall_hanging_sign]\n[birch_hanging_sign birch_wall_hanging_sign]\n[cherry_hanging_sign cherry_wall_hanging_sign]\n[crimson_hanging_sign crimson_wall_hanging_sign]\n[dark_oak_hanging_sign dark_oak_wall_hanging_sign]\n[jungle_hanging_sign jungle_wall_hanging_sign]\n[mangrove_hanging_sign mangrove_wall_hanging_sign]\n[oak_hanging_sign oak_wall_hanging_sign]\n[spruce_hanging_sign spruce_wall_hanging_sign]\n[warped_hanging_sign warped_wall_hanging_sign]\n</code></pre>"},{"location":"format.html#smithing-table","title":"Smithing table","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/smithing.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[smithing_table]\n</code></pre>"},{"location":"format.html#stonecutter","title":"Stonecutter","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/stonecutter.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[stonecutter]\n</code></pre>"},{"location":"format.html#villagers","title":"Villagers","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/villager2.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[villager]\n</code></pre>"},{"location":"format.html#villagerprofessions","title":"<code>villager.professions</code>","text":"<p>Optional OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>A list of professions specifying villager professions with optional levels.</p> <p>Cleric (any levels) or fisherman (any levels)</p> <pre><code>[villager]\nvillager.professions = cleric minecraft:fisherman\n</code></pre> <p>Fletcher (levels 1, 3, 4)</p> <pre><code>[villager]\nvillager.professions = fletcher@1 minecraft:fletcher@3-4\n</code></pre>"},{"location":"format.html#vanilla-professions","title":"Vanilla professions","text":"<ul> <li><code>armorer</code></li> <li><code>butcher</code></li> <li><code>cartographer</code></li> <li><code>cleric</code></li> <li><code>farmer</code></li> <li><code>fisherman</code></li> <li><code>fletcher</code></li> <li><code>leatherworker</code></li> <li><code>librarian</code></li> <li><code>mason</code></li> <li><code>nitwit</code></li> <li><code>shepherd</code></li> <li><code>toolsmith</code></li> <li><code>weaponsmith</code></li> </ul> <p>Tip</p> <p>OptiGUI supports professions from other mods, if prefixed with a namespace.</p>"},{"location":"format.html#villagertype","title":"<code>villager.type</code>","text":"<p>Optional OptiGUI 2.1.3+ Minecraft 1.18+</p> <p>A list of strings specifying villager types (which biome was it born in). This is how its clothing looks like. Possible values:</p> <ul> <li><code>desert</code></li> <li><code>jungle</code></li> <li><code>plains</code></li> <li><code>savanna</code></li> <li><code>snow</code></li> <li><code>swamp</code></li> <li><code>taiga</code></li> </ul>"},{"location":"format.html#wandering-trader","title":"Wandering trader","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/villager2.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Example</p> <pre><code>[wandering_trader]\n</code></pre>"},{"location":"format.html#survival-inventory","title":"Survival inventory","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Texture path: <code>minecraft:textures/gui/container/inventory.png</code></p> <p>Supports the following additional selectors: common selectors, interaction selectors, independent selectors</p> <p>Note</p> <p>Common selectors apply to the player instead of the interacted container, because there is no interaction with another entity or block entity.</p> <p>Example</p> <pre><code>[player]\ninteraction.texture = minecraft:textures/gui/container/inventory.png\n</code></pre>"},{"location":"format.html#creative-inventory-everything-else","title":"Creative inventory &amp; everything else","text":"<p>OptiGUI 2.1.0-beta.1+ Minecraft 1.18+</p> <p>Note</p> <p>GUIs not having a default texture must to be fitered with <code>interaction.texture</code>.</p> <p>Example for creative inventory</p> <p>This is the equivalent syntax of OptiFine's <code>texture.PATH</code> example in the table. In <code>/assets/optigui/gui/creative_desert.ini</code>:</p> <pre><code>[player #1]\nbiomes = desert\ninteraction.texture = minecraft:textures/gui/container/creative_inventory/tab_inventory.png\nreplacement = tab_inventory_desert.png\n[player #2]\nbiomes = desert\ninteraction.texture = minecraft:textures/gui/container/creative_inventory/tabs.png\nreplacement = tabs_desert.png\n[player #3]\nbiomes = desert\ninteraction.texture = minecraft:textures/gui/container/creative_inventory/tab_items.png\nreplacement = tab_items_desert.png\n[player #4]\nbiomes = desert\ninteraction.texture = minecraft:textures/gui/container/creative_inventory/tab_item_search.png\nreplacement = tab_item_search_desert.png\n</code></pre>"},{"location":"migrate.html","title":"Migration guide","text":"<p>This page contains resources to migrate OptiFine extensions to the new OptiGUI ini files, and equivalents of OptiFine.</p>"},{"location":"migrate.html#migrate-optifine-extensions","title":"Migrate OptiFine extensions","text":""},{"location":"migrate.html#migrate-containers","title":"Migrate containers","text":"<p><code>container=_something</code> usually becomes <code>[something]</code>. See the table to migrate each container:</p> OptiFine container OptiGUI replacement <code>_cartography_table</code> <code>[cartography_table]</code> <code>_chest_boat</code> <code>[chest_boat]</code>, <code>variants=&lt;variants&gt;</code> becomes <code>chest_boat.variants=&lt;variants&gt;</code> <code>_grindstone</code> <code>[grindstone]</code> <code>_loom</code> <code>[loom]</code> <code>_smithing_table</code> <code>[smithing_table]</code> <code>_stonecutter</code> <code>[stonecutter]</code>"},{"location":"migrate.html#migrate-extension-properties","title":"Migrate extension properties","text":"<p>Extension properties usually become their own groups. See the table to migrate each extension property:</p> OptiFine extension property OptiGUI replacement <code>_barrel=true</code> <code>[barrel]</code> <code>_minecart=true</code> <code>[chest_minecart]</code> or <code>[hopper_minecart]</code> <code>_furnace</code> <code>[furnace]</code>. <code>variants</code> have been removed from <code>container=furnace</code> <code>_blast</code>, <code>_blast_furnace</code> <code>[blast_furnace]</code> <code>_smoker</code> <code>[smoker]</code> <code>_camel=true</code> <code>[camel]</code> <code>_zombie_horse=true</code> <code>[zombie_horse]</code> <code>_skeleton_horse=true</code> <code>[skeleton_horse]</code> <code>_wandering_trader=true</code> <code>[wandering_trader]</code>"},{"location":"migrate.html#optifine-equivalents","title":"OptiFine equivalents","text":""},{"location":"migrate.html#container","title":"container","text":"<p><code>container=something</code> becomes <code>[the_identifier_of_something]</code>.</p> <p>Tip</p> <p>Go to the Minecraft Wiki. Select the container, scroll down to Data values/ID/Java Edition, and copy the text from the Identifier column. This identifier is used by the <code>/give</code> and <code>/summon</code> commands.</p>"},{"location":"migrate.html#texture","title":"texture","text":"<p><code>texture=replacement.png</code> becomes <code>replacement=replacement.png</code>.</p> <p>Paths may need to be rewritten. Please refer to paths.</p> <p>Note</p> <p>OptiGUI requires the file extension to be specified, otherwise it won't find the resource.</p> <pre><code>texture.&lt;path1&gt;=replacement_1\ntexture.&lt;path2&gt;.png=replacement_2.png\n# becomes\n[#1]\ninteraction.texture = minecraft:textures/gui/&lt;path1&gt;.png\nreplacement = replacement_1.png\n[#2]\ninteraction.texture = minecraft:textures/gui/&lt;path2&gt;.png\nreplacement = replacement_2.png\n</code></pre>"},{"location":"migrate.html#name","title":"name","text":"<p>Replace the <code>pattern</code>, <code>ipattern</code>, <code>regex</code>, and <code>iregex</code> prefixes with name postfixes as shown below:</p> <pre><code>name = Name\n# becomes\nname = Name\nname = pattern:Name\n# becomes\nname.wildcard = Name\nname = ipattern:Name\n# becomes\nname.wildcard.ignore_case = Name\nname = regex:Name\n# becomes\nname.regex = Name\nname = iregex:Name\n# becomes\nname.regex.ignore_case = Name\n</code></pre> <p>Keep backslashes as they are.</p>"},{"location":"migrate.html#biomes","title":"biomes","text":"<p>Keep it as-is.</p>"},{"location":"migrate.html#heights","title":"heights","text":"<p>Keep it as-is.</p>"},{"location":"migrate.html#large","title":"large","text":"<p>Becomes <code>chest.large</code>.</p>"},{"location":"migrate.html#trapped","title":"trapped","text":"<p>See Trapped chest.</p>"},{"location":"migrate.html#christmas","title":"christmas","text":"<pre><code># If true\ndate = dec@24-26\n# If false\ndate = 1 2 3 4 5 6 7 8 9 10 11 dec@1-23 dec@27-31\n</code></pre>"},{"location":"migrate.html#ender","title":"ender","text":"<p>Becomes <code>[ender_chest]</code></p>"},{"location":"migrate.html#levels","title":"levels","text":"<p>Becomes <code>beacon.levels</code>.</p>"},{"location":"migrate.html#professions","title":"professions","text":"<p>Becomes <code>villager.professions</code>. See the following example for rewriting rules:</p> <pre><code>professions = profession\n# becomes\nvillager.professions = profession\nprofessions = profession1 profession2\n# becomes\nvillager.professions = profession1 profession2\nprofessions = profession:1\n# becomes\nvillager.professions = profession@1\nprofessions = profession:2-3\n# becomes\nvillager.professions = profession@2-3\nprofessions = profession:1,2-3\n# becomes\nvillager.professions = profession@1 profesions@2-3\n</code></pre> <p><code>profession=none</code> is not supported.</p>"},{"location":"migrate.html#variants","title":"variants","text":"<p>Becomes a group in the INI file.</p> <pre><code>variants = variant\n# beacomes\n[variant]\nvariants = variant1 variant2\n# becomes\n[variant1 variant2]\n</code></pre>"},{"location":"migrate.html#colors","title":"colors","text":"<ul> <li>For llamas, it becomes <code>llama.colors</code></li> <li>For shulker boxes, add the color in front of the shulker box like this: <code>&lt;color&gt;_shulker_box</code>, and it becomes a group</li> </ul>"},{"location":"syntax.html","title":"Basic information &amp; syntax","text":"<p>OptiGUI supports two syntaxes:</p> <ul> <li>OptiGUI syntax 2.1.0-beta.1+</li> <li>OptiFine syntax.</li> </ul> <p>Tip</p> <p>To prevent loading an OptiFine <code>.properties</code> file on OptiGUI, add <code>optigui.ignore=true</code> into it.</p> <p>OptiGUI files support conditional loading.</p> <p>OptiGUI syntax is only supported for OptiGUI files, and the OptiFine syntax is only supported for OptiFine files. Do not mix them.</p> <p>This page describes the OptiGUI syntax. For the OptiFine syntax, visit the link above.</p>"},{"location":"syntax.html#file-naming-rules","title":"File naming rules","text":"<p>Each file in a resource pack must only contain characters <code>a-z 0-9 _</code>. All lowercase, no whitespace. Otherwise, the game will not recognize it.</p> <p>Each file name must match the regular expression <code>^[a-z0-9_]+$</code></p> <p>Textures must be PNG images with <code>.png</code> extension.</p> <p>All text files must be encoded in UTF-8. Do not use an ASCII encoding.</p>"},{"location":"syntax.html#file-structure","title":"File structure","text":"<p>OptiGUI uses INI files, kind of like OptiFine, but uses more features of it.</p> <pre><code># Comments start with a hashtag\n; or a semicolon\n</code></pre> <p>All selectors are case-sensitive: <code>name</code> is not the same as <code>Name</code>. The order of selectors within the file or within a group does not matter.</p>"},{"location":"syntax.html#groups","title":"Groups","text":"<p>Groups start with <code>[square bracketed]</code> identifiers. Place the identifier of the container to replace the GUI.</p> <p>Tip</p> <p>Go to the Minecraft Wiki. Select a container (for example, a chest, horse, crafting table, etc.), scroll down to Data values/ID/Java Edition, and copy the text from the Identifier column. This identifier is used by the <code>/give</code> and <code>/summon</code> commands.</p> <p>If multiple selectors are specified in a group, they all must match in order to apply the replacement texture. If incompatible selectors are specified (for example, <code>llama.colors</code> to <code>[chest]</code>, it will never match).</p> <pre><code>[chest]\n# Selectors here apply to minecraft:chest\n# If namespace is omitted, the default is minecraft\nselector=value\n[minecraft:barrel]\n# Starts a new group\n# Selectors here apply to minecraft:barrel\nselector=value_for_barrel\n[horse minecraft:llama]\n# Selectors here apply to both horses and llamas\n# Namespaces and the lack of them can be mixed\n# The default namespace is minecraft\nwhite_spaces = are_trimmed\n# Is the same as\nwhite_spaces=are_trimmed\n[chest #2]\n# [chest] is not allowed again\n# Anything specified after a hashtag is ignored\n# Useful when want to replace the GUI of the same container, but with different selectors\n[#3 chest]\n# Hashtags can be anywhere between the square brackets\n# Remember, the group accepts a list of identifiers, a hashtag's scope lasts until the next whitespace\n# Here, only #3 is ignored, but not chest\n</code></pre>"},{"location":"syntax.html#paths","title":"Paths","text":"<p>Caution</p> <p>Always use forward slashes (<code>/</code>) to separate folders.</p> <p>Regardless of operating system (Windows, Mac, *nix), do not use backslashes (<code>\\</code>), or the game will not properly recognize the path.</p> <p>OptiGUI paths can be specified in two ways: relative and absolute.</p> <pre><code># Relative path (relative to the folder the INI file is in)\npath=texture.png\npath=subfolder/texture.png\n# You can use current and parent directory\npath=./texture.png\npath=../other/texture.png\n# Absolute (namespace prefix)\npath=minecraft:textures/gui/container/crafting_table.png\n</code></pre> <p>Caution</p> <p>Contrary to OptiFine, OptiGUI requires the file extension (<code>.png</code> here) to be specified. If it is not specified, OptiGUI will not find the texture!</p> <p>Note</p> <p>Tildes (<code>~</code>) are not supported by OptiGUI. When loading OptiFine <code>.properties</code>, OptiGUI will expand them.</p>"},{"location":"syntax.html#strings","title":"Strings","text":"<p>OptiGUI supports exact values, and case-sensitive and case-insensitive variants of wildcards and regexes. However, these are not prefixed with <code>regex:</code>, <code>iregex:</code>, <code>pattern:</code>, or <code>ipattern:</code>. The accepted type (wildcard, regex, ...) depends on the selector, and always noted explicitly.</p> <p>Note</p> <p>Any backslashes must be doubled. Matching backslashes within a regular expression or wildcard must be quadrupled.</p> <p>\u2705 Correct: <code>name=regex:\\\\d+</code>, <code>name=regex:\\\\\\\\</code>, <code>nbt.display.name=/\\\\/\\\\</code></p> <p>\u274c Wrong: <code>name=regex:\\d+</code>, <code>name=regex:\\\\</code> (for matching ), <code>name=/\\/\\\\</code> (missing a backslash)</p>"},{"location":"syntax.html#exact-value","title":"Exact value","text":"<p><code>Letter to Herobrine</code> matches <code>Letter to Herobrine</code>, and nothing else.</p>"},{"location":"syntax.html#wildcard","title":"Wildcard","text":"<p>You may use the following characters to match other characters:</p> Character Regex equivalent Meaning <code>*</code> <code>.+</code> Matches 1 or more characters <code>?</code> <code>.*</code> Matches 0 or more characters"},{"location":"syntax.html#regex","title":"Regex","text":"<p>Regular expressions \"patterns\" other strings can be matched against.</p> <p>OptiGUI understands the Java syntax. Expression flags are not supported.</p> <p>You can use the RegExr tool to create and test your regexes. When pasting into az OptiGUI INI file, make sure to duplicate all backslashes (<code>\\</code>), as OptiGUI will unescape any escape sequences Java supports (like hexadecimals, line breaks, and unicode codepoints).</p>"},{"location":"syntax.html#numbers","title":"Numbers","text":"<p>Numbers can be specified as a signed or unsigned integer.</p> <p>Example</p> <pre><code>number = 1\n</code></pre>"},{"location":"syntax.html#ranges","title":"Ranges","text":"<p>Inclusive ranges between numbers are defined with a <code>-</code> between the minimum and the maximum number. The right side is optional: if it is omitted, the upper bound will be positive infinity.</p> <p>Tip</p> <p>OptiGUI usually allows specifying ranges as lists</p> <p>Example</p> <pre><code># 1, 2, 3\nnumbers = 1-3\n# Multiple ranges\n# 1 through 3, or 6, or 8, or 10 through 15\n# 1, 2, 3, 6, 8, 10, 11, 12, 13, 14, 15\nnumbers = 1-3 6 8 10-15\n# Greater than or equal to\n# 100, or 200, or 5340, or 25902, etc.\nnumbers = 100-\n# Negative number, not a range\n# Only matches negative 100, not -4, -7, or -101\nnumbers = -100\n# Negative numbers must be surrounded with parenthesis\nnumbers = (-1)-(-3)\n</code></pre> <p>Note</p> <p>There is no range to specify <code>\u2264</code> relation, you need to specify the lower bound: <code>0-100</code>. <code>-100</code> is a number, and will only match <code>-100</code>.</p> <p>Note</p> <p>The <code>range:</code> prefix is not supported by OptiGUI and will be ignored when loading OptiFine <code>.properties</code>.</p>"},{"location":"syntax.html#booleans","title":"Booleans","text":"<p>Booleans are case-insensitive.</p> <p>Possible values: <code>true</code>, <code>false</code>. Everything else is ignored.</p>"},{"location":"syntax.html#lists","title":"Lists","text":"<p>Lists can hold multiple elements separated with a whitespace. The element type is specified by the selector, it can be any type, like numbers or booleans. Strings are also supported, however, whitespaces within a string will start a new list element (and therefore, cannot be specified in strings inside lists).</p> <p>If multiple elements are specified in a list, any of them can match in order to replace a texture.</p>"},{"location":"syntax.html#dates","title":"Dates","text":"<p>Dates can be specified by the name, the first 3 characters of its name, or number of the month, and an optional day number or day range separated with a <code>@</code> character:</p> <p>Example</p> <pre><code># January\ndate = january\ndate = jan\ndate = 1\n# These are all equivalent to:\ndate = jan@1-31\n# October 1-5, 11-15, 21-25\ndate = oct@1-5 10@11-15 october@21-25\n# The following is not valid:\ninvalid_date = october@1-5,11-15,21-25\n# Christmas\nchristmas = dec@24-26\n# Not Christmas\nnot_christmas = 1 2 3 4 5 6 7 8 9 spooktober 11 dec@1-23 dec@27-31\n</code></pre>"},{"location":"syntax.html#supported-month-abbreviations","title":"Supported month abbreviations","text":"Month Abbreviations January <code>1</code>, <code>jan</code>, <code>january</code> February <code>2</code>, <code>feb</code>, <code>february</code> March <code>3</code>, <code>mar</code>, <code>march</code> April <code>4</code>, <code>apr</code>, <code>april</code> May <code>5</code>, <code>may</code> June <code>6</code>, <code>jun</code>, <code>june</code> July <code>7</code>, <code>jul</code>, <code>july</code> August <code>8</code>, <code>aug</code>, <code>augustus</code> September <code>9</code>, <code>sep</code>, <code>september</code> October <code>10</code>, <code>oct</code>, <code>october</code>, <code>spooktober</code> November <code>11</code>, <code>nov</code>, <code>november</code> December <code>12</code>, <code>dec</code>, <code>december</code>"},{"location":"syntax.html#professions","title":"Professions","text":"<p>Villager professions can be specified by an optional namespace and the profession name name, and an optional level or levl range separated with a <code>@</code> character:</p> <p>Example</p> <pre><code>villager.professions = cleric minecraft:fisherman           # Cleric (any level) or fisherman (any level)\nvillager.professions = fletcher@1 minecraft:fletcher@3-4    # Fletcher (levels 1, 3, 4)\n</code></pre>"},{"location":"usage.html","title":"Using OptiGUI in a mod","text":"<p>These are the basics of OptiGUI, which gives you some idea on how to use it within your mods.</p>"},{"location":"usage.html#depending-on-optigui","title":"Depending on OptiGUI","text":"<p>OptiGUI doesn't have a maven repository. You can install it from Modrinth Maven or Curse Maven.</p> <ol> <li>Add OptiGUI API JAR to your <code>build.gradle(.kts)</code> as described in one of the above links (classifier: <code>api</code>)</li> <li>Add OptiGUI dependencies to the <code>modLocalRuntime</code> configuration inside the dependencies block</li> <li>Extract the nested JARs from the OptiGUI jar's <code>META-INF/jars</code> folder to your local mods folder. You can do this manually or with <code>build.gradle(.kts)</code>. Here's an example<ol> <li>Create a configuration</li> <li>Add dependencies to the configuration</li> <li>Create a task to extract nested JARs</li> </ol> </li> </ol>"},{"location":"usage.html#resource-loading","title":"Resource loading","text":"<p>When the game (re)loads resources, OptiGUI reads OptiGUI properties and OptiFine properties, and creates a filter chain.</p> <p>For each selector in each group in each OptiFine resource, OptiGUI invokes the registered <code>ISelector</code>(Java syntax) to create a filter for the given selector. A <code>ConjunctionFilter</code>(Java syntax) will be created for a group containing these filters, and this filter will be added to the filter chain.</p> <p>Filters added to the filter chain will be evaluated sequentially until one returns a non-null value. This will be cached until the end of the current game tick, and will be used as a the replacement texture of the GUI screen.</p>"},{"location":"usage.html#adding-a-container","title":"Adding a container","text":"<p>If your mod adds a new container with a GUI screen, add the GUI screen's texture to your mod's metadata.</p> <p>If you use or extend a vanilla block entity or entity, OptiGUI has built-in support for that. However, you may want to create selectors for your block entity or entity subclass, which can be used by resource packs.</p> <p>If you make your own block entity or entity, most OptiGUI selectors won't work. You'll need to create your own selectors, which can be used by resource packs.</p>"},{"location":"usage.html#the-interaction","title":"The interaction","text":"<ul> <li>Before an interaction, OptiGUI can be notified about an upcoming interaction using <code>Interaction.prepare</code>(Java syntax). This is called internally, when the player right clicks a block or entity. This method call returns <code>false</code>, and is ignored while an interaction is ongoing.</li> <li>An interaction begins when the game opens a GUI screen</li> <li>An interaction ends, when the open GUI screen gets closed</li> <li>Use <code>IBeforeInteractionBeginCallback</code>(Java syntax) to get notified right before an interaction begins.</li> </ul>"},{"location":"usage.html#selectors","title":"Selectors","text":"<p>Selectors create a filter from a string description in an OptiGUI INI file. For example, <code>name = OptiGUI</code> is a selector, <code>name</code> is the selector key, and <code>OptiGUI</code> is the string description.</p> <p>The created filters process an <code>Interaction</code>(Java syntax) once every game tick, and may provide a replacement texture. This texture will be cached for subsequent GUI screen rendering calls within the game tick.</p> <p>To create a selector:</p> <ol> <li>Create a public class</li> <li>Implement <code>ISelector</code>(Java syntax) (Kotlin examples)</li> <li>Register it with <code>SelectorRegistry.register</code>(Java syntax)</li> </ol>"},{"location":"usage.html#optigui-custom-metadata","title":"OptiGUI custom metadata","text":"<p><code>fabric.mod.json</code> allows custom fields to be specified. OptiGUI will read this metadata from each mod where present.</p>"},{"location":"usage.html#container-default-gui-texture","title":"Container default GUI texture","text":"<p>Add a JSON object named <code>optigui:container_default_gui_textures</code> to the custom fields to define the texture of a container's screen:</p> <pre><code>{\n//...\n\"custom\": {\n\"optigui:container_default_gui_textures\": {\n\"modid:container1\": \"modid:path/to/textures/container1.png\",\n\"modid:container2\": \"modid:path/to/textures/container2.png\"\n}\n}\n}\n</code></pre> <p>Container <code>modid:container1</code> has the texture <code>modid:path/to/textures/container1.png</code>, and <code>modid:container2</code> has the texture <code>modid:path/to/textures/container2.png</code>.</p>"}]}